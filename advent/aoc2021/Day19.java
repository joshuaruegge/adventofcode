package advent.aoc2021;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.LinkedList;

import advent.utilities.general.Coord3;
import advent.utilities.general.DayRunner;
import advent.utilities.general.IDay;

public class Day19 implements IDay {

	String input = "--- scanner 0 ---\r\n"
			+ "602,365,-604\r\n"
			+ "309,-819,-775\r\n"
			+ "-589,731,-551\r\n"
			+ "-803,817,548\r\n"
			+ "325,-731,774\r\n"
			+ "-855,-664,304\r\n"
			+ "-91,96,-88\r\n"
			+ "47,-34,29\r\n"
			+ "692,405,-767\r\n"
			+ "513,535,660\r\n"
			+ "340,-633,-836\r\n"
			+ "399,500,577\r\n"
			+ "-805,780,754\r\n"
			+ "-594,682,-384\r\n"
			+ "-814,882,768\r\n"
			+ "316,-768,-918\r\n"
			+ "-747,-756,401\r\n"
			+ "-763,-608,329\r\n"
			+ "-842,-465,-620\r\n"
			+ "382,-782,771\r\n"
			+ "370,550,692\r\n"
			+ "413,-882,725\r\n"
			+ "572,506,-721\r\n"
			+ "-647,-437,-631\r\n"
			+ "-595,663,-432\r\n"
			+ "-612,-421,-623\r\n"
			+ "\r\n"
			+ "--- scanner 1 ---\r\n"
			+ "651,-500,-434\r\n"
			+ "-857,735,662\r\n"
			+ "635,642,-754\r\n"
			+ "729,-486,-497\r\n"
			+ "-415,-410,836\r\n"
			+ "-526,-541,-481\r\n"
			+ "563,506,854\r\n"
			+ "521,543,781\r\n"
			+ "463,-596,701\r\n"
			+ "35,98,137\r\n"
			+ "635,-455,-352\r\n"
			+ "-494,-398,-496\r\n"
			+ "-882,827,718\r\n"
			+ "-432,777,-726\r\n"
			+ "-638,775,-763\r\n"
			+ "589,-469,732\r\n"
			+ "-461,-441,936\r\n"
			+ "-609,-427,-446\r\n"
			+ "699,656,-710\r\n"
			+ "-785,719,810\r\n"
			+ "620,580,892\r\n"
			+ "-117,-14,37\r\n"
			+ "665,837,-755\r\n"
			+ "-412,-353,785\r\n"
			+ "519,-469,653\r\n"
			+ "-418,786,-828\r\n"
			+ "\r\n"
			+ "--- scanner 2 ---\r\n"
			+ "-602,682,731\r\n"
			+ "-626,-811,-733\r\n"
			+ "531,-555,307\r\n"
			+ "-644,-532,552\r\n"
			+ "636,394,-728\r\n"
			+ "-637,-714,-596\r\n"
			+ "858,599,268\r\n"
			+ "523,-938,-917\r\n"
			+ "-693,-417,644\r\n"
			+ "694,-645,267\r\n"
			+ "-367,380,-747\r\n"
			+ "-709,814,766\r\n"
			+ "-296,374,-718\r\n"
			+ "11,-105,-29\r\n"
			+ "462,-907,-731\r\n"
			+ "902,672,241\r\n"
			+ "596,350,-706\r\n"
			+ "380,-931,-866\r\n"
			+ "745,589,274\r\n"
			+ "570,463,-772\r\n"
			+ "-581,744,793\r\n"
			+ "-543,-740,-669\r\n"
			+ "577,-675,408\r\n"
			+ "-717,-647,635\r\n"
			+ "-321,430,-859\r\n"
			+ "\r\n"
			+ "--- scanner 3 ---\r\n"
			+ "655,-559,-732\r\n"
			+ "-774,-491,-781\r\n"
			+ "-886,765,893\r\n"
			+ "-863,-564,-831\r\n"
			+ "246,659,-503\r\n"
			+ "-912,601,889\r\n"
			+ "-536,-832,880\r\n"
			+ "687,912,426\r\n"
			+ "239,687,-383\r\n"
			+ "-687,701,-387\r\n"
			+ "-729,-455,-832\r\n"
			+ "-659,765,-476\r\n"
			+ "620,-558,-753\r\n"
			+ "-535,-781,854\r\n"
			+ "-801,702,-508\r\n"
			+ "469,-627,665\r\n"
			+ "-66,-35,42\r\n"
			+ "-959,723,785\r\n"
			+ "612,-653,-584\r\n"
			+ "236,737,-406\r\n"
			+ "453,-625,497\r\n"
			+ "24,107,-28\r\n"
			+ "573,810,500\r\n"
			+ "437,-634,658\r\n"
			+ "739,754,483\r\n"
			+ "-393,-747,893\r\n"
			+ "\r\n"
			+ "--- scanner 4 ---\r\n"
			+ "-488,-806,-408\r\n"
			+ "448,-742,758\r\n"
			+ "-393,610,-389\r\n"
			+ "424,-690,782\r\n"
			+ "-653,374,883\r\n"
			+ "-128,-72,149\r\n"
			+ "413,-866,-645\r\n"
			+ "-428,606,-632\r\n"
			+ "-615,583,930\r\n"
			+ "370,-780,-649\r\n"
			+ "462,775,839\r\n"
			+ "-653,-721,-433\r\n"
			+ "336,904,-366\r\n"
			+ "-745,-717,523\r\n"
			+ "458,668,890\r\n"
			+ "-650,-591,561\r\n"
			+ "375,778,-473\r\n"
			+ "23,111,18\r\n"
			+ "495,632,810\r\n"
			+ "-813,-654,495\r\n"
			+ "458,-755,-678\r\n"
			+ "-632,-731,-409\r\n"
			+ "-436,516,-525\r\n"
			+ "395,757,-456\r\n"
			+ "-636,490,835\r\n"
			+ "456,-785,686\r\n"
			+ "\r\n"
			+ "--- scanner 5 ---\r\n"
			+ "615,449,405\r\n"
			+ "606,321,517\r\n"
			+ "88,-78,-139\r\n"
			+ "-780,-416,-721\r\n"
			+ "319,-388,-500\r\n"
			+ "583,576,506\r\n"
			+ "335,-454,686\r\n"
			+ "-491,528,286\r\n"
			+ "362,-336,-562\r\n"
			+ "422,626,-694\r\n"
			+ "-550,-737,540\r\n"
			+ "-380,-731,442\r\n"
			+ "-656,-443,-717\r\n"
			+ "345,-372,-486\r\n"
			+ "-429,517,354\r\n"
			+ "306,-441,462\r\n"
			+ "-681,865,-712\r\n"
			+ "40,35,20\r\n"
			+ "-596,-326,-705\r\n"
			+ "438,618,-659\r\n"
			+ "-662,817,-711\r\n"
			+ "-730,698,-717\r\n"
			+ "-477,-728,465\r\n"
			+ "307,-464,681\r\n"
			+ "466,629,-464\r\n"
			+ "-498,315,353\r\n"
			+ "\r\n"
			+ "--- scanner 6 ---\r\n"
			+ "933,-730,666\r\n"
			+ "898,428,-816\r\n"
			+ "-798,703,-780\r\n"
			+ "-292,-473,307\r\n"
			+ "-704,359,748\r\n"
			+ "492,-384,-761\r\n"
			+ "591,643,436\r\n"
			+ "-610,390,838\r\n"
			+ "-674,-821,-324\r\n"
			+ "5,97,-82\r\n"
			+ "-718,-847,-323\r\n"
			+ "-734,760,-785\r\n"
			+ "-247,-490,537\r\n"
			+ "632,-426,-855\r\n"
			+ "-614,488,810\r\n"
			+ "547,664,472\r\n"
			+ "863,545,-823\r\n"
			+ "868,-627,599\r\n"
			+ "-438,-842,-318\r\n"
			+ "159,-67,-103\r\n"
			+ "502,561,535\r\n"
			+ "-244,-385,369\r\n"
			+ "44,-22,68\r\n"
			+ "789,523,-817\r\n"
			+ "497,-470,-748\r\n"
			+ "-782,790,-865\r\n"
			+ "829,-819,656\r\n"
			+ "\r\n"
			+ "--- scanner 7 ---\r\n"
			+ "421,593,705\r\n"
			+ "-550,-568,554\r\n"
			+ "-648,616,-373\r\n"
			+ "-667,-598,413\r\n"
			+ "350,824,-296\r\n"
			+ "-496,-305,-771\r\n"
			+ "366,810,-270\r\n"
			+ "394,589,829\r\n"
			+ "-839,599,711\r\n"
			+ "-640,651,-389\r\n"
			+ "-435,-336,-585\r\n"
			+ "720,-826,790\r\n"
			+ "-887,598,730\r\n"
			+ "664,-529,-450\r\n"
			+ "744,-596,781\r\n"
			+ "671,-711,698\r\n"
			+ "-720,593,779\r\n"
			+ "314,748,-313\r\n"
			+ "-353,-312,-720\r\n"
			+ "-33,45,33\r\n"
			+ "304,605,645\r\n"
			+ "-651,846,-417\r\n"
			+ "653,-432,-587\r\n"
			+ "-504,-688,453\r\n"
			+ "570,-503,-523\r\n"
			+ "\r\n"
			+ "--- scanner 8 ---\r\n"
			+ "502,316,366\r\n"
			+ "880,-596,771\r\n"
			+ "-831,-328,444\r\n"
			+ "881,-705,637\r\n"
			+ "-780,752,498\r\n"
			+ "-407,573,-788\r\n"
			+ "830,-669,682\r\n"
			+ "781,-601,-747\r\n"
			+ "-805,-379,443\r\n"
			+ "-44,7,73\r\n"
			+ "-616,-533,-561\r\n"
			+ "405,860,-687\r\n"
			+ "-448,-535,-545\r\n"
			+ "385,744,-752\r\n"
			+ "-493,564,-761\r\n"
			+ "633,-507,-704\r\n"
			+ "96,-60,-112\r\n"
			+ "474,778,-734\r\n"
			+ "-609,-526,-529\r\n"
			+ "-884,640,432\r\n"
			+ "538,476,462\r\n"
			+ "-844,-413,301\r\n"
			+ "-766,548,510\r\n"
			+ "464,523,347\r\n"
			+ "-452,423,-816\r\n"
			+ "802,-602,-712\r\n"
			+ "\r\n"
			+ "--- scanner 9 ---\r\n"
			+ "679,579,-546\r\n"
			+ "-633,765,777\r\n"
			+ "-74,55,50\r\n"
			+ "-511,831,689\r\n"
			+ "534,-511,647\r\n"
			+ "-894,-391,-703\r\n"
			+ "518,-679,645\r\n"
			+ "-844,435,-663\r\n"
			+ "638,-676,-790\r\n"
			+ "-715,524,-653\r\n"
			+ "-755,584,-657\r\n"
			+ "-821,-283,-745\r\n"
			+ "401,747,758\r\n"
			+ "752,-750,-892\r\n"
			+ "74,114,-53\r\n"
			+ "-328,-283,767\r\n"
			+ "448,855,687\r\n"
			+ "502,-518,654\r\n"
			+ "691,504,-368\r\n"
			+ "-471,-296,852\r\n"
			+ "424,937,726\r\n"
			+ "-636,843,757\r\n"
			+ "-470,-322,801\r\n"
			+ "-847,-287,-581\r\n"
			+ "804,-693,-734\r\n"
			+ "727,586,-487\r\n"
			+ "\r\n"
			+ "--- scanner 10 ---\r\n"
			+ "-334,524,-772\r\n"
			+ "691,579,544\r\n"
			+ "780,848,-553\r\n"
			+ "-570,-696,-297\r\n"
			+ "-243,518,-715\r\n"
			+ "433,-569,471\r\n"
			+ "-658,-661,831\r\n"
			+ "-683,532,596\r\n"
			+ "536,-690,-555\r\n"
			+ "603,-706,-640\r\n"
			+ "-570,-594,-342\r\n"
			+ "-595,-729,859\r\n"
			+ "-726,540,668\r\n"
			+ "-595,-661,-297\r\n"
			+ "613,-696,-418\r\n"
			+ "549,-552,519\r\n"
			+ "-532,-566,793\r\n"
			+ "-631,508,572\r\n"
			+ "642,-531,424\r\n"
			+ "727,542,464\r\n"
			+ "802,793,-444\r\n"
			+ "834,546,515\r\n"
			+ "163,-56,42\r\n"
			+ "92,105,169\r\n"
			+ "827,829,-636\r\n"
			+ "-342,526,-523\r\n"
			+ "\r\n"
			+ "--- scanner 11 ---\r\n"
			+ "-516,598,703\r\n"
			+ "846,-385,-755\r\n"
			+ "-587,432,-500\r\n"
			+ "-396,552,804\r\n"
			+ "866,-487,-762\r\n"
			+ "-486,715,844\r\n"
			+ "-258,-672,467\r\n"
			+ "-623,381,-545\r\n"
			+ "-373,-623,559\r\n"
			+ "79,-20,37\r\n"
			+ "841,-581,380\r\n"
			+ "758,879,843\r\n"
			+ "748,766,837\r\n"
			+ "558,724,-720\r\n"
			+ "-488,-696,476\r\n"
			+ "398,760,-816\r\n"
			+ "-514,382,-411\r\n"
			+ "824,-451,-634\r\n"
			+ "605,798,-835\r\n"
			+ "973,-688,345\r\n"
			+ "831,923,870\r\n"
			+ "-287,-786,-566\r\n"
			+ "-362,-783,-482\r\n"
			+ "-219,-670,-491\r\n"
			+ "903,-560,318\r\n"
			+ "175,124,-94\r\n"
			+ "\r\n"
			+ "--- scanner 12 ---\r\n"
			+ "860,572,385\r\n"
			+ "-469,-675,610\r\n"
			+ "657,831,-653\r\n"
			+ "653,-537,599\r\n"
			+ "646,-524,597\r\n"
			+ "-584,-771,-719\r\n"
			+ "830,-308,-384\r\n"
			+ "634,748,-601\r\n"
			+ "737,497,486\r\n"
			+ "-549,556,677\r\n"
			+ "-865,819,-467\r\n"
			+ "-819,707,-417\r\n"
			+ "-890,678,-411\r\n"
			+ "772,528,512\r\n"
			+ "-110,-34,-4\r\n"
			+ "-493,-684,380\r\n"
			+ "-477,-806,-851\r\n"
			+ "51,94,55\r\n"
			+ "683,635,-686\r\n"
			+ "-605,-833,-781\r\n"
			+ "-643,629,703\r\n"
			+ "851,-315,-388\r\n"
			+ "662,-324,-380\r\n"
			+ "-560,693,774\r\n"
			+ "483,-580,577\r\n"
			+ "-542,-592,495\r\n"
			+ "\r\n"
			+ "--- scanner 13 ---\r\n"
			+ "-473,-301,-612\r\n"
			+ "728,-369,-775\r\n"
			+ "661,-457,398\r\n"
			+ "-451,-784,771\r\n"
			+ "682,855,494\r\n"
			+ "-663,476,-657\r\n"
			+ "-465,-344,-540\r\n"
			+ "19,138,-38\r\n"
			+ "618,489,-694\r\n"
			+ "763,-457,353\r\n"
			+ "561,528,-886\r\n"
			+ "-434,668,763\r\n"
			+ "781,766,576\r\n"
			+ "796,-432,-803\r\n"
			+ "551,424,-797\r\n"
			+ "-450,520,691\r\n"
			+ "-459,-685,579\r\n"
			+ "-342,612,788\r\n"
			+ "728,-432,353\r\n"
			+ "-589,438,-714\r\n"
			+ "-441,-396,-516\r\n"
			+ "633,-495,-737\r\n"
			+ "-457,-693,828\r\n"
			+ "745,810,597\r\n"
			+ "-626,549,-615\r\n"
			+ "\r\n"
			+ "--- scanner 14 ---\r\n"
			+ "726,281,-938\r\n"
			+ "939,-510,600\r\n"
			+ "-786,344,556\r\n"
			+ "-527,457,-857\r\n"
			+ "-624,-679,-560\r\n"
			+ "-273,-598,248\r\n"
			+ "-508,-567,-540\r\n"
			+ "562,277,-912\r\n"
			+ "573,687,713\r\n"
			+ "-510,600,-930\r\n"
			+ "-277,-563,365\r\n"
			+ "415,744,661\r\n"
			+ "650,-590,-846\r\n"
			+ "-356,-496,263\r\n"
			+ "-649,439,559\r\n"
			+ "101,-10,-68\r\n"
			+ "644,-441,-935\r\n"
			+ "-633,402,626\r\n"
			+ "820,-592,636\r\n"
			+ "604,385,-985\r\n"
			+ "654,-530,-806\r\n"
			+ "-534,531,-734\r\n"
			+ "172,-159,-172\r\n"
			+ "761,-585,588\r\n"
			+ "-599,-694,-599\r\n"
			+ "517,670,547\r\n"
			+ "\r\n"
			+ "--- scanner 15 ---\r\n"
			+ "638,-635,540\r\n"
			+ "413,505,782\r\n"
			+ "693,689,-524\r\n"
			+ "-581,-507,-485\r\n"
			+ "405,505,724\r\n"
			+ "-492,359,-539\r\n"
			+ "820,-460,-340\r\n"
			+ "-615,-518,453\r\n"
			+ "-498,430,-510\r\n"
			+ "813,-317,-391\r\n"
			+ "596,700,-661\r\n"
			+ "277,532,678\r\n"
			+ "-654,679,468\r\n"
			+ "789,-399,-526\r\n"
			+ "808,-633,532\r\n"
			+ "622,606,-588\r\n"
			+ "-548,384,-398\r\n"
			+ "617,-620,468\r\n"
			+ "-817,-544,395\r\n"
			+ "-468,-533,-551\r\n"
			+ "-804,-555,439\r\n"
			+ "-42,1,-10\r\n"
			+ "-685,630,542\r\n"
			+ "-739,590,530\r\n"
			+ "-512,-573,-529\r\n"
			+ "\r\n"
			+ "--- scanner 16 ---\r\n"
			+ "-582,-633,-788\r\n"
			+ "-672,-796,-748\r\n"
			+ "-481,-916,556\r\n"
			+ "712,-643,529\r\n"
			+ "-493,631,-618\r\n"
			+ "609,-580,-422\r\n"
			+ "145,-139,98\r\n"
			+ "614,-413,-471\r\n"
			+ "-350,663,-603\r\n"
			+ "615,-461,-490\r\n"
			+ "-771,719,795\r\n"
			+ "711,-522,643\r\n"
			+ "733,650,371\r\n"
			+ "-737,758,937\r\n"
			+ "611,754,418\r\n"
			+ "-25,-37,3\r\n"
			+ "-822,745,794\r\n"
			+ "775,758,444\r\n"
			+ "823,519,-336\r\n"
			+ "-445,-967,601\r\n"
			+ "-552,-750,-647\r\n"
			+ "-554,-966,467\r\n"
			+ "775,-611,671\r\n"
			+ "834,739,-271\r\n"
			+ "-379,548,-653\r\n"
			+ "825,725,-373\r\n"
			+ "\r\n"
			+ "--- scanner 17 ---\r\n"
			+ "344,530,759\r\n"
			+ "605,-626,-721\r\n"
			+ "-630,517,-324\r\n"
			+ "768,461,-745\r\n"
			+ "767,435,-796\r\n"
			+ "417,422,801\r\n"
			+ "-680,632,-353\r\n"
			+ "910,422,-711\r\n"
			+ "602,-704,-701\r\n"
			+ "-645,549,-467\r\n"
			+ "-298,441,860\r\n"
			+ "727,-692,-633\r\n"
			+ "-692,-628,-426\r\n"
			+ "523,-385,709\r\n"
			+ "-400,455,851\r\n"
			+ "-774,-612,-381\r\n"
			+ "391,426,637\r\n"
			+ "483,-445,713\r\n"
			+ "-371,-642,911\r\n"
			+ "394,-296,719\r\n"
			+ "-416,-676,730\r\n"
			+ "32,57,64\r\n"
			+ "-629,-706,-412\r\n"
			+ "-372,-612,716\r\n"
			+ "-363,661,849\r\n"
			+ "\r\n"
			+ "--- scanner 18 ---\r\n"
			+ "-546,518,-970\r\n"
			+ "-348,-719,-535\r\n"
			+ "629,-631,-926\r\n"
			+ "467,-598,387\r\n"
			+ "-525,425,-875\r\n"
			+ "683,-435,-904\r\n"
			+ "-416,-782,-563\r\n"
			+ "613,589,-415\r\n"
			+ "674,-607,-948\r\n"
			+ "-529,-796,369\r\n"
			+ "99,-11,-195\r\n"
			+ "-733,541,592\r\n"
			+ "-768,545,349\r\n"
			+ "-725,451,485\r\n"
			+ "510,619,-569\r\n"
			+ "508,-420,334\r\n"
			+ "391,619,-422\r\n"
			+ "516,573,470\r\n"
			+ "-511,-656,-601\r\n"
			+ "528,-484,269\r\n"
			+ "485,444,411\r\n"
			+ "135,-123,-3\r\n"
			+ "595,508,440\r\n"
			+ "-508,309,-923\r\n"
			+ "-508,-786,393\r\n"
			+ "-9,17,-25\r\n"
			+ "-673,-871,368\r\n"
			+ "\r\n"
			+ "--- scanner 19 ---\r\n"
			+ "613,816,571\r\n"
			+ "859,-415,686\r\n"
			+ "941,-554,-719\r\n"
			+ "890,653,-699\r\n"
			+ "-592,442,416\r\n"
			+ "-682,504,287\r\n"
			+ "-779,-348,319\r\n"
			+ "-222,883,-457\r\n"
			+ "830,-591,-620\r\n"
			+ "-714,-359,539\r\n"
			+ "711,-399,758\r\n"
			+ "-677,-357,333\r\n"
			+ "524,717,489\r\n"
			+ "903,-628,-662\r\n"
			+ "-270,945,-545\r\n"
			+ "-588,414,318\r\n"
			+ "-225,715,-562\r\n"
			+ "767,-307,783\r\n"
			+ "955,586,-802\r\n"
			+ "-706,-297,-764\r\n"
			+ "-661,-478,-798\r\n"
			+ "4,50,1\r\n"
			+ "851,596,-891\r\n"
			+ "569,780,592\r\n"
			+ "-705,-492,-734\r\n"
			+ "\r\n"
			+ "--- scanner 20 ---\r\n"
			+ "712,-646,852\r\n"
			+ "305,725,-631\r\n"
			+ "-461,515,838\r\n"
			+ "781,-599,934\r\n"
			+ "722,435,597\r\n"
			+ "684,454,390\r\n"
			+ "-635,-335,-688\r\n"
			+ "648,550,550\r\n"
			+ "801,-664,818\r\n"
			+ "-859,788,-370\r\n"
			+ "-105,14,-14\r\n"
			+ "384,-624,-528\r\n"
			+ "44,112,79\r\n"
			+ "356,770,-595\r\n"
			+ "553,-616,-433\r\n"
			+ "-542,-562,642\r\n"
			+ "-546,-421,560\r\n"
			+ "-569,-389,725\r\n"
			+ "-640,-441,-639\r\n"
			+ "-527,636,816\r\n"
			+ "-563,508,858\r\n"
			+ "-862,704,-295\r\n"
			+ "306,859,-522\r\n"
			+ "-746,779,-227\r\n"
			+ "-586,-456,-713\r\n"
			+ "405,-659,-527\r\n"
			+ "\r\n"
			+ "--- scanner 21 ---\r\n"
			+ "770,-845,-412\r\n"
			+ "-875,290,-366\r\n"
			+ "855,-572,514\r\n"
			+ "710,419,-580\r\n"
			+ "687,-579,427\r\n"
			+ "-872,458,-471\r\n"
			+ "3,-176,80\r\n"
			+ "749,394,-565\r\n"
			+ "-415,669,378\r\n"
			+ "796,-601,469\r\n"
			+ "-445,-403,-802\r\n"
			+ "-509,759,409\r\n"
			+ "-385,-864,779\r\n"
			+ "719,-968,-369\r\n"
			+ "379,508,714\r\n"
			+ "575,484,645\r\n"
			+ "452,491,571\r\n"
			+ "-337,-944,809\r\n"
			+ "721,-887,-290\r\n"
			+ "-321,-859,722\r\n"
			+ "-681,-397,-823\r\n"
			+ "-505,731,507\r\n"
			+ "-401,-402,-828\r\n"
			+ "-827,228,-454\r\n"
			+ "769,510,-453\r\n"
			+ "\r\n"
			+ "--- scanner 22 ---\r\n"
			+ "-382,506,667\r\n"
			+ "431,635,-275\r\n"
			+ "623,-464,808\r\n"
			+ "-432,595,594\r\n"
			+ "670,586,962\r\n"
			+ "373,-457,-496\r\n"
			+ "-715,-749,695\r\n"
			+ "672,-372,923\r\n"
			+ "469,709,-404\r\n"
			+ "-768,-383,-496\r\n"
			+ "453,828,-252\r\n"
			+ "-598,-608,665\r\n"
			+ "-887,-451,-502\r\n"
			+ "-381,640,558\r\n"
			+ "696,-381,693\r\n"
			+ "-737,710,-662\r\n"
			+ "-705,568,-599\r\n"
			+ "-826,682,-598\r\n"
			+ "346,-333,-492\r\n"
			+ "256,-517,-508\r\n"
			+ "783,577,819\r\n"
			+ "-552,-709,785\r\n"
			+ "786,661,894\r\n"
			+ "-29,119,70\r\n"
			+ "-935,-432,-501\r\n"
			+ "\r\n"
			+ "--- scanner 23 ---\r\n"
			+ "-55,-79,-166\r\n"
			+ "-784,-695,-688\r\n"
			+ "-658,-726,-561\r\n"
			+ "-612,760,550\r\n"
			+ "211,-863,-718\r\n"
			+ "741,-533,554\r\n"
			+ "371,-799,-760\r\n"
			+ "-612,358,-547\r\n"
			+ "-582,761,745\r\n"
			+ "-684,-848,414\r\n"
			+ "647,489,433\r\n"
			+ "608,679,-734\r\n"
			+ "-596,440,-592\r\n"
			+ "-518,503,-578\r\n"
			+ "-548,716,564\r\n"
			+ "667,-344,589\r\n"
			+ "623,803,-589\r\n"
			+ "-627,-886,488\r\n"
			+ "601,596,391\r\n"
			+ "323,-896,-659\r\n"
			+ "545,375,404\r\n"
			+ "637,-562,556\r\n"
			+ "-728,-647,-561\r\n"
			+ "-726,-775,451\r\n"
			+ "721,747,-679\r\n"
			+ "\r\n"
			+ "--- scanner 24 ---\r\n"
			+ "416,-323,416\r\n"
			+ "-749,897,-628\r\n"
			+ "412,-346,-550\r\n"
			+ "638,-263,419\r\n"
			+ "664,933,413\r\n"
			+ "813,710,-651\r\n"
			+ "-687,727,850\r\n"
			+ "-593,-541,572\r\n"
			+ "-597,-431,-661\r\n"
			+ "766,672,-860\r\n"
			+ "-642,889,-718\r\n"
			+ "674,891,489\r\n"
			+ "-697,579,890\r\n"
			+ "-664,796,888\r\n"
			+ "265,-227,-550\r\n"
			+ "-95,60,-6\r\n"
			+ "-730,-527,481\r\n"
			+ "258,-449,-580\r\n"
			+ "718,689,-744\r\n"
			+ "-597,-497,503\r\n"
			+ "-506,932,-624\r\n"
			+ "683,764,473\r\n"
			+ "-568,-321,-725\r\n"
			+ "-627,-352,-596\r\n"
			+ "419,-285,400";
	
	@Override
	public String part1() {
		LinkedList<HashSet<Coord3>> scannerData = new LinkedList<HashSet<Coord3>>();
		for(String s : input.split("\r\n\r\n")) {
			HashSet<Coord3> beacons = new HashSet<Coord3>();
			String[] points = s.split("\r\n");
			for(int i = 1; i < points.length; i++) {
				String[] dims = points[i].split(",");
				beacons.add(new Coord3(Integer.parseInt(dims[0]), Integer.parseInt(dims[1]), Integer.parseInt(dims[2])));
			}
			scannerData.add(beacons);
		}
		
		HashSet<Coord3> beacons = scannerData.remove(0);
		HashSet<Coord3> scanners = new HashSet<Coord3>();
		scanners.add(new Coord3(0,0,0));
		
		while(scannerData.size() > 0) {
			HashSet<Coord3> potentialSet = scannerData.pop();
			ArrayList<Coord3> transformed = transformToMatch(beacons,potentialSet);
			if(transformed == null) {
				//append back into queue, hit later
				scannerData.add(potentialSet);
			} else {
				scanners.add(transformed.remove(0));
				beacons.addAll(transformed);
			}
		}
		
		return Integer.toString(beacons.size());
	}
	
	public Coord3 rotate(Coord3 c, int i) {
		switch(i) {
		case 0:
			return c;
		case 1:
			return new Coord3(-c.y,c.x,c.z);
		case 2:
			return new Coord3(-c.x,-c.y,c.z);
		case 3:
			return new Coord3(c.y,-c.x,c.z);
		}
		return null;
	}
	
	public Coord3 face(Coord3 c, int i) {
		switch(i) {
		case 0:
			return c;
		case 1:
			return new Coord3(c.x,-c.y,-c.z);
		case 2:
			return new Coord3(c.x,-c.z,c.y);
		case 3:
			return new Coord3(-c.y,-c.z,c.x);
		case 4:
			return new Coord3(c.y,-c.z,-c.x);
		case 5:
			return new Coord3(-c.x,-c.z,-c.y);
		}
		return null;
	}

	public ArrayList<Coord3> transformToMatch(HashSet<Coord3> points, HashSet<Coord3> newPoints) {
		for(int face = 0; face < 6; face++) {
			for(int rotate = 0; rotate < 4; rotate++) {
				HashSet<Coord3> reoriented = new HashSet<Coord3>();
				for(Coord3 c : newPoints)
					reoriented.add(rotate(face(c,face),rotate));
				for(Coord3 c : points) {
					for(Coord3 d : reoriented) {
						Coord3 diff = c.diff(d);
						HashSet<Coord3> repositioned = new HashSet<Coord3>(reoriented.stream().map(x -> x.sum(diff)).toList());
						HashSet<Coord3> common = new HashSet<Coord3>(repositioned);
						common.retainAll(points);
						if(common.size() >= 12) {
							ArrayList<Coord3> ret = new ArrayList<Coord3>();
							ret.add(diff);
							ret.addAll(repositioned);
							return ret;
						}
					}
				}
			}
		}
		return null;
	}
	
	@Override
	public String part2() {
		LinkedList<HashSet<Coord3>> scannerData = new LinkedList<HashSet<Coord3>>();
		for(String s : input.split("\r\n\r\n")) {
			HashSet<Coord3> beacons = new HashSet<Coord3>();
			String[] points = s.split("\r\n");
			for(int i = 1; i < points.length; i++) {
				String[] dims = points[i].split(",");
				beacons.add(new Coord3(Integer.parseInt(dims[0]), Integer.parseInt(dims[1]), Integer.parseInt(dims[2])));
			}
			scannerData.add(beacons);
		}
		
		HashSet<Coord3> beacons = scannerData.remove(0);
		HashSet<Coord3> scanners = new HashSet<Coord3>();
		scanners.add(new Coord3(0,0,0));
		
		while(scannerData.size() > 0) {
			HashSet<Coord3> potentialSet = scannerData.pop();
			ArrayList<Coord3> transformed = transformToMatch(beacons,potentialSet);
			if(transformed == null) {
				//append back into queue, hit later
				scannerData.add(potentialSet);
			} else {
				scanners.add(transformed.remove(0));
				beacons.addAll(transformed);
			}
		}
		
		int max = 0;
		for(Coord3 a : scanners) {
			for(Coord3 b : scanners) {
				max = Math.max(max, a.dist(b));
			}
		}
		
		return Integer.toString(max);
	}

	public static void main(String[] args) {
		DayRunner.run(new Day19());
	}

}
